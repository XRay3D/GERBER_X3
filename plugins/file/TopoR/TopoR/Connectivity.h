#pragma once
#include "Commons.h"
#include <QColor>

/* Мною, Константином aka KilkennyCat, 05 июля 2020 года создано сиё
 * на основе "Описание формата TopoR PCB версия 1.2.0 Апрель 2017 г.".
 * k@kilkennycat.pro
 * http://kilkennycat.ru  http://kilkennycat.pro
 * Мною, Дамиром aka x-ray, 08.02.2025 года сие перекидано на кресты.
 */

namespace TopoR {

// Раздел «Соединения на плате».
struct Connectivity {
    /// \note В этом разделе описывается конкретная реализация соединений: печатные проводники, межслойные переходы и области металлизации.

    // Переходное отверстие на плате.
    struct Via {
        // Признак фиксации.
        Xml::Attr<Bool> fixed;
        // Ссылка на тип переходного отверстия.
        ViastackRef viastackRef;
        // Ссылка на цепь.
        NetRef netRef;
        // Точка привязки объекта.
        Org org;
    };

    // Описание змейки.
    struct Serpent {
        /// \note !Проводники, реализующие змейку, описываются в секции Wires (см. описание раздела Connectivity)
        // Идентификатор неименованных объектов.
        Xml::Attr<QString> id;
        // Параметр змейки: зазор между соседними изломами.
        Xml::Attr<double> gap;
        // Параметр змейки: высота h1 (см. описание змейки Serpent).
        Xml::Attr<double> h1;
        // Параметр змейки: высота h2 (см. описание змейки Serpent).
        Xml::Attr<double> h2;
        // Параметр змейки: высота h3 (см. описание змейки Serpent).
        Xml::Attr<double> h3;
        // Параметр змейки: высота h4 (см. описание змейки Serpent).
        Xml::Attr<double> h4;
        // Параметр змейки: требуемая длина.
        Xml::Attr<double> length;
    };

    // Описание застёгнутой пары проводников.
    struct ZippedWire {
        /// \note !Сегменты(Track) описывают осевую линию пары.Форма проводников пары рассчитывается автоматически.
        // Идентификатор неименованных объектов.
        Xml::Attr<QString> id;
        // Признак фиксации.
        Xml::Attr<Bool> fixed;
        // Ссылка на слой.
        LayerRef layerRef;
        // Ссылка на дифференциальный сигнал.
        DiffSignalRef diffSignalRef;
        // Начальная точка линии, дуги.
        Start start;

        // Описание(я) сегмента проводника.
        Xml::Array<Xml::Variant<TrackLine, TrackArc, TrackArcCW>> Tracks; /// \note !В случае отсутствия - предупреждение. Весь ZippedWire будет проигнорирован.
    };

    // Описание проводника.
    struct Wire {

        // Описание части проводника (последовательность сегментов с одной шириной и одинаковым признаком фиксации).
        struct Subwire {
            /// \note !Атрибут zipwireRef (ссылка на застёгнутую пару проводников) используется, если описываемая часть проводника входит в застёгнутую пару проводников ZippedWire (см. пример описания проводника дифференциальной пары).

            // Описание «капельки» четырёхугольником. Первая вершина соответствует точке привязки контакта (переходного отверстия). Остальные вершины описывают контур четырёхугольника против часовой стрелки.
            struct Teardrop {
                /// \note !TopoR при импорте игнорирует информацию о капельках.
                // координаты точки, вершины.
                Xml::Array<Dot> Dots;
            };

            // Признак фиксации.
            Xml::Attr<Bool> fixed;
            // Ширина проводника.
            Xml::Attr<double> width;
            // Ссылка на застёгнутую пару проводников. Строка должна содержать идентификатор описанной застёгнутой пары проводников ZippedWire.
            Xml::Attr<QString> zipwireRef;
            // Описание «капелек» для Subwire.
            Xml::ArrayElem<Teardrop> Teardrops;
            /// \note От KilkennyCat: сделал как массив, в спецификации не так, но так удобней
            // Начальная точка линии, дуги.
            Start start;
            // Описание(я) сегмента проводника.
            Xml::Array<Xml::Variant<TrackLine, TrackArc, TrackArcCW>> Tracks; /// \note !В случае отсутствия - предупреждение. Весь проводник будет проигнорирован.

            QGraphicsItem* graphicsItem(const QColor& color = Qt::red) const;
        };

        // Ссылка на слой.
        LayerRef layerRef;
        // Ссылка на цепь.
        NetRef netRef;
        // Части проводника (последовательность сегментов с одной шириной и одинаковым признаком фиксации).
        Xml::Array<Subwire> Subwires;
    };
    // Описание заливаемой области металлизации (полигона).
    struct Copper {
        /// \note !Заливка полигона линиями (Fill) записывается только для других САПР. TopoR при импорте её игнорирует. Сплошная заливка (fillType = Solid) не записывается.

        // Описание термобарьера для подключения контактных площадок к области металлизации.
        struct ThermalPad {
            // Описание термобарьера.
            Xml::Optional<Thermal> thermal;
        };

        // Описание термобарьера для подключения площадок переходных отверстий к области металлизации.
        struct ThermalVia {
            // Описание термобарьера.
            Xml::Optional<Thermal> thermal;
        };

        // Описание контура заливаемой области металлизации.
        struct Shape {
            // Описание залитой фигуры.
            Xml::Variant<FilledCircle, FilledRect, Polygon, FilledContour> FilledFigure_;
        };

        // Описание островка области металлизации.
        struct Island {

            // Описание спицы термобарьера, присутствующего на плате
            struct ThermalSpoke {
                // Толщина линии.
                Xml::Attr<double> lineWidth;
                // Описания координат точек, вершин.
                Xml::ArrayElem<Dot> Dots; /// \note !В случае отсутствия - весь ThermalSpoke будет проигнорирован.
            };

            // Описание многоугольника.
            Xml::Variant<Polygon, FilledContour> Polygon_;
            // Вырезы в островке области металлизации.
            Xml::ArrayElem<Xml::Variant<Polygon, FilledContour>, Xml::DontSkip> Voids; /// \note !В случае отсутствия - критическая ошибка. Обязан быть пустой тэг.
            // Описание спиц термобарьеров, присутствующих на плате
            Xml::ArrayElem<ThermalSpoke> ThermalSpokes;
        };
        // Параметр области металлизации (полигона): приоритет заливки.
        Xml::Attr<int> priority;
        // Параметр области металлизации (полигона): использовать указанный зазор.
        Xml::Attr<Bool> useBackoff;
        // Параметр области металлизации (полигона): зазор до области металлизации.
        Xml::Attr<double> backoff;
        // Параметр области металлизации (полигона) стека: подключение контактных площадок.
        Xml::Attr<connectPad> connectPad_;
        // Параметр области металлизации (полигона): подключение площадок переходных отверстий.
        Xml::Attr<connectVia> connectVia_;
        // Толщина линии.
        Xml::Attr<double> lineWidth;
        // Параметр области металлизации (полигона): зазор между линиями штриховки.
        Xml::Attr<double> lineClr;
        // Параметр области металлизации (полигона): минимальная площадь островка.
        Xml::Attr<double> minSquare;
        // Параметр области металлизации (полигона): точность аппроксимации контура.
        Xml::Attr<precision> precision_;
        // Параметр области металлизации (полигона): удалять неподключенные островки.
        Xml::Attr<Bool> deleteUnconnected;
        // Параметр области металлизации (полигона): состояние.
        Xml::Attr<state> state_;
        // Параметр области металлизации (полигона): тип заливки.
        Xml::Attr<fillType> fillType_;
        // Ссылка на слой.
        LayerRef layerRef;
        // Ссылка на цепь.
        Xml::Optional<NetRef> netRef;
        // Описание термобарьера для подключения контактных площадок к области металлизации.
        ThermalPad thermalPad; /// \note !В случае отсутствия - критическая ошибка. Обязан быть пустой тэг.

        // Описание термобарьера для подключения площадок переходных отверстий к области металлизации.
        ThermalVia thermalVia; /// \note !В случае отсутствия - критическая ошибка. Обязан быть пустой тэг.

        // Описание контура заливаемой области металлизации..
        Shape shape; /// \note !В случае отсутствия - критическая ошибка. Обязан быть пустой тэг.

        // Вырезы в областях металлизации (полигонах) заданные пользователем.
        Xml::ArrayElem<Xml::Variant<FilledCircle, /// \note !В случае отсутствия - критическая ошибка. Обязан быть пустой тэг.

                           FilledContour,
                           FilledRect,
                           Polygon>,
            Xml::DontSkip>
            Voids;
        // Островки области металлизации.
        Xml::ArrayElem<Island> Islands; /// \note !В случае отсутствия - критическая ошибка. Обязан быть пустой тэг.

        // Заливка областей металлизации (полигонов) линиями.
        Xml::ArrayElem<Line> Fill;
        /// \note !TopoR при импорте игнорирует эту информацию и строит заливку заново.
    };

    // Описание незаливаемой области металлизации.
    struct NonfilledCopper {

        // Описание контура незаливаемой области металлизации.
        struct Shape {

            // Описание фигуры.
            Xml::Variant<
                ArcCCW,
                ArcCW,
                ArcByAngle,
                ArcByMiddle,
                Circle,
                Line,
                Polyline,
                Rect,
                Contour>
                FigureContPoliline_;
        };

        // Толщина линии.
        Xml::Attr<double> lineWidth;
        // Ссылка на слой.
        LayerRef layerRef;
        // Ссылка на цепь.
        Xml::Optional<NetRef> netRef;
        // Описание контура незаливаемой области металлизации.
        Shape shape;
    };

    // Версия раздела.
    Xml::Attr<QString> version;
    // Переходные отверстия на плате.
    Xml::ArrayElem<Via> Vias;
    // Змейки
    Xml::ArrayElem<Serpent> Serpents;
    // Застёгнутые пары проводников.
    Xml::ArrayElem<ZippedWire> ZippedWires;
    // Проводники.
    Xml::ArrayElem<Wire> Wires;
    // Oбласти металлизации (полигонов).
    Xml::ArrayElem<Copper> Coppers;
    // Незаливаемые области металлизации.
    Xml::ArrayElem<NonfilledCopper> NonfilledCoppers;

    /************************************************************************
     * Здесь находятся функции для работы с элементами класса Connectivity. *
     * Они не являются частью формата TopoR PCB.                            *
     * **********************************************************************/
};

} // namespace TopoR
